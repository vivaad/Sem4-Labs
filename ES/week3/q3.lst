


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET, DATA, READONLY
    2 00000000                 EXPORT           __Vectors
    3 00000000         
    4 00000000         __Vectors
    5 00000000 10001000        DCD              0x10001000
    6 00000004 00000000        DCD              Reset_Handler ; Address of the 
                                                            reset handler
    7 00000008                 ALIGN
    8 00000008         
    9 00000008                 AREA             mycode, CODE, READONLY
   10 00000000                 ENTRY
   11 00000000                 EXPORT           Reset_Handler
   12 00000000         
   13 00000000         ;-------------------------------------------------------
                       -----------
   14 00000000         ; Reset_Handler: 
   15 00000000         ;   Performs division by repetitive subtraction.
   16 00000000         ;   Dividend and Divisor are read from code memory (DIVI
                       DEND, DIVISOR).
   17 00000000         ;   The result (QUOTIENT, REMAINDER) is stored in data m
                       emory.
   18 00000000         ;-------------------------------------------------------
                       -----------
   19 00000000         Reset_Handler
   20 00000000 480A            LDR              R0, =DIVIDEND ; R0 -> address o
                                                            f dividend
   21 00000002 490B            LDR              R1, =DIVISOR ; R1 -> address of
                                                             divisor
   22 00000004 6802            LDR              R2, [R0]    ; R2 = dividend
   23 00000006 680B            LDR              R3, [R1]    ; R3 = divisor
   24 00000008         
   25 00000008 F04F 0400       MOV              R4, #0      ; R4 will hold the 
                                                            quotient
   26 0000000C         CHECK_LOOP
   27 0000000C 429A            CMP              R2, R3      ; Compare dividend 
                                                            (R2) with divisor (
                                                            R3)
   28 0000000E DB04            BLT              DONE        ; If dividend < div
                                                            isor, we're done
   29 00000010 EBA2 0203       SUB              R2, R2, R3  ; Subtract divisor 
                                                            from dividend
   30 00000014 F104 0401       ADD              R4, R4, #1  ; Increment quotien
                                                            t
   31 00000018 E7F8            B                CHECK_LOOP  ; Repeat until divi
                                                            dend < divisor
   32 0000001A         
   33 0000001A         DONE
   34 0000001A         ; Store results (R4 -> QUOTIENT, R2 -> REMAINDER)
   35 0000001A 4D06            LDR              R5, =QUOTIENT
   36 0000001C 602C            STR              R4, [R5]
   37 0000001E 4D06            LDR              R5, =REMAINDER
   38 00000020 602A            STR              R2, [R5]
   39 00000022         
   40 00000022         STOP
   41 00000022 E7FE            B                STOP        ; Infinite loop
   42 00000024         
   43 00000024         ;-------------------------------------------------------
                       -----------
   44 00000024         ; Code memory: initial values for DIVIDEND and DIVISOR



ARM Macro Assembler    Page 2 


   45 00000024         ;-------------------------------------------------------
                       -----------
   46 00000024 00000064 
                       DIVIDEND
                               DCD              100         ; Example dividend
   47 00000028 00000007 
                       DIVISOR DCD              7           ; Example divisor
   48 0000002C         
   49 0000002C 00000000 
              00000000 
              00000000 
              00000000         AREA             mydata, DATA, READWRITE
   50 00000000 00000000 
                       QUOTIENT
                               DCD              0           ; Memory location f
                                                            or the quotient
   51 00000004 00000000 
                       REMAINDER
                               DCD              0           ; Memory location f
                                                            or the remainder
   52 00000008         
   53 00000008                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\q3.d -
o.\q3.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NX
P\LPC17xx --predefine="__EVAL SETA 1" --list=.\q3.lst q3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file q3.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 4 in file q3.s
   Uses
      At line 2 in file q3.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK_LOOP 0000000C

Symbol: CHECK_LOOP
   Definitions
      At line 26 in file q3.s
   Uses
      At line 31 in file q3.s
Comment: CHECK_LOOP used once
DIVIDEND 00000024

Symbol: DIVIDEND
   Definitions
      At line 46 in file q3.s
   Uses
      At line 20 in file q3.s
Comment: DIVIDEND used once
DIVISOR 00000028

Symbol: DIVISOR
   Definitions
      At line 47 in file q3.s
   Uses
      At line 21 in file q3.s
Comment: DIVISOR used once
DONE 0000001A

Symbol: DONE
   Definitions
      At line 33 in file q3.s
   Uses
      At line 28 in file q3.s
Comment: DONE used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 19 in file q3.s
   Uses
      At line 6 in file q3.s
      At line 11 in file q3.s

STOP 00000022

Symbol: STOP
   Definitions
      At line 40 in file q3.s
   Uses
      At line 41 in file q3.s
Comment: STOP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 9 in file q3.s
   Uses
      None
Comment: mycode unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

QUOTIENT 00000000

Symbol: QUOTIENT
   Definitions
      At line 50 in file q3.s
   Uses
      At line 35 in file q3.s
Comment: QUOTIENT used once
REMAINDER 00000004

Symbol: REMAINDER
   Definitions
      At line 51 in file q3.s
   Uses
      At line 37 in file q3.s
Comment: REMAINDER used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 49 in file q3.s
   Uses
      None
Comment: mydata unused
3 symbols
345 symbols in table
